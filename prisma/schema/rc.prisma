model RCLevel {
  id String @id @default(uuid())

  level             String
  relevantGrade     String
  stars             Int
  numberOfQuestions Int

  description String?

  RCKeyword RCKeyword[]
  RCScore   RCScore[]
  monthlyRCScores MonthlyRCScore[]

  RCLevelSettings RCLevelSettings?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RCKeyword {
  id String @id @default(uuid())

  name        String
  description String?

  RCLevel   RCLevel @relation(fields: [rcLevelId], references: [id], onDelete: Cascade)
  rcLevelId String

  hidden Boolean @default(false)

  isFree Boolean @default(false)

  RCQuestionSet RCQuestionSet?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RCQuestionSet {
  id String @id @default(uuid())

  title   String
  passage String

  RCKeyword   RCKeyword? @relation(fields: [RCKeywordId], references: [id], onDelete: Cascade)
  RCKeywordId String?    @unique

  RCQuestion          RCQuestion[]
  RCQuestionFirstTry  RCQuestionFirstTry[]
  RCQuestionSecondTry RCQuestionSecondTry[]

  active    Boolean @default(false)
  timeLimit Int     @default(60)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RCQuestion {
  id String @id @default(uuid())

  RCQuestionSetId String
  RCQuestionSet   RCQuestionSet @relation(fields: [RCQuestionSetId], references: [id], onDelete: Cascade)

  RCQuestionCompleted RCQuestionCompleted[]

  orderNumber Int

  question    String
  choices     String[]
  answer      String
  explanation String

  score     Int
  timeLimit Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RCQuestionCompleted {
  id String @id @default(uuid())

  RCQuestionId String
  RCQuestion   RCQuestion @relation(fields: [RCQuestionId], references: [id], onDelete: Cascade)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  RCScore   RCScore? @relation(fields: [RCScoreId], references: [id], onDelete: Cascade)
  RCScoreId String?

  score Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RCQuestionFirstTry {
  id String @id @default(uuid())

  RCQuestionSetId String
  RCQuestionSet   RCQuestionSet @relation(fields: [RCQuestionSetId], references: [id], onDelete: Cascade)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  totalQuestions Int @default(0)
  correctAnswers Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RCQuestionSecondTry {
  id String @id @default(uuid())

  RCQuestionSetId String
  RCQuestionSet   RCQuestionSet @relation(fields: [RCQuestionSetId], references: [id], onDelete: Cascade)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  totalQuestions Int @default(0)
  correctAnswers Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
